"""init

Revision ID: ec85d1f54c1e
Revises: 
Create Date: 2023-12-09 21:17:37.854703

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ec85d1f54c1e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "region",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("codes", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("street", sa.String(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longtitude", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["region_id"],
            ["region.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("MASTER", "CUSTOMER", "DRIVER", "ADMIN", name="userrole"),
            nullable=False,
        ),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("balance", sa.DECIMAL(precision=12, scale=2), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("inn", sa.String(), nullable=True),
        sa.Column("trip_radius_km", sa.Integer(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=True),
        sa.Column("registration_date", sa.BigInteger(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=True),
        sa.Column("password_creation_time", sa.BigInteger(), nullable=True),
        sa.Column("user_reset_code", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["address.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "auto",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("customer_id", sa.Integer(), nullable=True),
        sa.Column("driver_id", sa.Integer(), nullable=True),
        sa.Column("brand", sa.String(), nullable=True),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("vin", sa.String(), nullable=True),
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("is_merged", sa.Boolean(), nullable=False),
        sa.Column("merged_to_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.Enum("TRUCK", "TRAILER", name="autotype"), nullable=False),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auto_brand"), "auto", ["brand"], unique=False)
    op.create_index(op.f("ix_auto_id"), "auto", ["id"], unique=False)
    op.create_index(op.f("ix_auto_number"), "auto", ["number"], unique=False)
    op.create_index(op.f("ix_auto_vin"), "auto", ["vin"], unique=False)
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guarantee_uuid", sa.String(), nullable=False),
        sa.Column("customer_id", sa.Integer(), nullable=True),
        sa.Column("master_id", sa.Integer(), nullable=True),
        sa.Column("declined_masters_ids", sa.ARRAY(sa.Integer()), nullable=False),
        sa.Column("driver_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.BigInteger(), nullable=False),
        sa.Column("updated_at", sa.BigInteger(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "CREATED",
                "CALCULATING",
                "REVIEWING",
                "ACCEPTED",
                "COMPLETED",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("is_need_evacuator", sa.Boolean(), nullable=False),
        sa.Column("is_need_mobile_team", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["address.id"],
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["master_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_orders_guarantee_uuid"),
        "orders",
        ["guarantee_uuid"],
        unique=False,
    )
    op.create_index(op.f("ix_orders_id"), "orders", ["id"], unique=False)
    op.create_table(
        "order_status_changes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time", sa.BigInteger(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column(
            "previous_status",
            sa.Enum(
                "CREATED",
                "CALCULATING",
                "REVIEWING",
                "ACCEPTED",
                "COMPLETED",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "new_status",
            sa.Enum(
                "CREATED",
                "CALCULATING",
                "REVIEWING",
                "ACCEPTED",
                "COMPLETED",
                name="orderstatus",
            ),
            nullable=False,
        ),
        sa.Column("previous_master_id", sa.Integer(), nullable=True),
        sa.Column("new_master_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["new_master_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.ForeignKeyConstraint(
            ["previous_master_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_order_status_changes_id"),
        "order_status_changes",
        ["id"],
        unique=False,
    )
    op.create_table(
        "order_to_auto_assosiation",
        sa.Column("order_id", sa.Integer(), nullable=True),
        sa.Column("auto_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auto_id"],
            ["auto.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("auto_id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.DECIMAL(precision=12, scale=2), nullable=True),
        sa.Column("created_at", sa.BigInteger(), nullable=False),
        sa.Column("updated_at", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auto_id"],
            ["auto.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tasks_id"), "tasks", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tasks_id"), table_name="tasks")
    op.drop_table("tasks")
    op.drop_table("order_to_auto_assosiation")
    op.drop_index(op.f("ix_order_status_changes_id"), table_name="order_status_changes")
    op.drop_table("order_status_changes")
    op.drop_index(op.f("ix_orders_id"), table_name="orders")
    op.drop_index(op.f("ix_orders_guarantee_uuid"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_auto_vin"), table_name="auto")
    op.drop_index(op.f("ix_auto_number"), table_name="auto")
    op.drop_index(op.f("ix_auto_id"), table_name="auto")
    op.drop_index(op.f("ix_auto_brand"), table_name="auto")
    op.drop_table("auto")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("address")
    op.drop_table("region")
    # ### end Alembic commands ###
