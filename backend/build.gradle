buildscript {
    dependencies {
        classpath("org.postgresql:postgresql:42.7.3")
        classpath("org.flywaydb:flyway-database-postgresql:10.10.0")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.10.0'
    id 'jacoco'
    id "io.sentry.jvm.gradle" version "4.11.0"
}


sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true

    org = "sentry"
    projectName = "gruzhub"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
    url = "https://sentry.tgtaps.com"
}

group = 'ru.gruzhub'
version = '0.0.1-SNAPSHOT'


java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.postgresql:postgresql:42.7.3'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    implementation 'org.flywaydb:flyway-core:10.10.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.10.0'
    implementation 'org.telegram:telegrambots:6.9.7.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.springframework.data:spring-data-redis:3.2.4'
    implementation 'net.datafaker:datafaker:2.1.0'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'org.json:json:20240303'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'dnsjava:dnsjava:3.5.3'
    implementation 'org.springframework.security:spring-security-crypto:6.2.4'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.741'
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// DB migrations settings

def props = new Properties()
file("./src/main/resources/application.properties").withInputStream { props.load(it) }

flyway {
    url = props.getProperty("spring.datasource.url")
    user = props.getProperty("spring.datasource.username")
    password = props.getProperty("spring.datasource.password")
}

// Test coverage settings

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jacocoTestReport {
    reports {
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}